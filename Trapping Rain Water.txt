
class Solution {
public:
  int trap(vector<int>& height) {
    int n = height.size();
    int left_max[n];
    int right_max[n];

    left_max[0] = height[0];
    for (int i = 1; i < n; i++) {
      left_max[i] = max(left_max[i - 1], height[i]);
    }

    right_max[n - 1] = height[n - 1];
    for (int i = n - 2; i >= 0; i--) {
      right_max[i] = max(right_max[i + 1], height[i]);
    }

    int water = 0;
    for (int i = 0; i < n; i++) {
      int trapped_water = min(left_max[i], right_max[i]) - height[i];
      if (trapped_water > 0) {
        water += trapped_water;
      }
    }

    return water;
  }
};
